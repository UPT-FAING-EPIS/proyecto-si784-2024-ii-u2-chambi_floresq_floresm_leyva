name: Mutant Testing Report


on:
  push:
    branches:
      - main  # Ajusta según tu rama principal

jobs:
  mutmut:
    runs-on: ubuntu-latest
    steps:
      # Verificar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v2

      # Configurar Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Cambia la versión si es necesario

      # Instalar dependencias de Playwright
      - name: Install dependencies
        run: |
           pip install mutmut==2.0.0
           pip install pytest
           pip install -r proyecto/requirements.txt

      - name: Run mutmut
        continue-on-error: true
        run: |
          cd proyecto
          mutmut run --paths-to-mutate classes/

      - name: Reporte mutmut
        continue-on-error: true
        run: |
          cd proyecto
          mutmut html
          mkdir -p report_mutante
          mv index.html report_mutante/index.html  # Mueve el reporte generado a report_mutante
      
      - name: Move Mutmut report to Reportes
        run: |
          mkdir -p ../Reportes
          mv proyecto/report_mutante ../Reportes/
        

      - name: Set up Git for deployment
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Deploy Playwright report to GitHub Pages
        run: |
          git fetch origin gh-pages || echo "No previous gh-pages branch"
          git checkout gh-pages || git checkout -b gh-pages
          git pull origin gh-pages || echo "No changes to pull from gh-pages"
          cp -r ../Reportes/* .  # Copiar contenido del reporte a la raíz
          git add .  # Agregar todos los archivos nuevos
          git commit -m "Deploy Playwright report to gh-pages" || echo "No changes to commit"
          git push origin gh-pages
